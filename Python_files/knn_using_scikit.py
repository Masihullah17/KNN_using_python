# -*- coding: utf-8 -*-
"""KNN_using_scikit.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Vr0fIfFs55Eaq8V7u5OdIYTz6qTtyne8
"""

from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn import metrics
import matplotlib.pyplot as plt

iris = load_iris()

X = iris.data
y = iris.target

X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=4)

k_range = range(1,26)
scores = {}
scorelist = []
for k in k_range:
  knn = KNeighborsClassifier(n_neighbors=k)
  knn.fit(X_train,y_train)
  y_pred = knn.predict(X_test)
  scores[k] = metrics.accuracy_score(y_test,y_pred)
  scorelist.append(scores[k])

plt.plot(k_range,scorelist)
plt.xlabel('Value of K for KNN')
plt.ylabel('Testing Accuracy')

#FinalModel after getting optimal k value
#In this case k = 3 to 19 we have same accuracy
#so choosing 5 randomly
knn = KNeighborsClassifier(n_neighbors=5)
knn.fit(X_train,y_train)

classes = {0:'setosa',1:'versicolor',2:'virginica'}

X_new = [[3,4,5,2],
        [5,4,2,2]]
y_predict = knn.predict(X_new)

print(classes[y_predict[0]])
print(classes[y_predict[1]])

